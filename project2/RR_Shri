#include <stdio.h>



int turnarroundtime(int n, int job[], int wait_time[], int ta_time[]) {
   int i = 0;
   for(i = 0; i< n; i++){
        ta_time[i] = job[i] + wait_time[i];
   }
   return 1;
}


int waitingtime(int process[], int n, int wait[], int quanta) {
   int time  = 0;
   int done = 0;
   int left[n];
   for (int i = 0 ; i < n ; i++){
        left[i] = process[i];
   }
 
   while (!0) {
      done = 1;
      for (int i = 0 ; i < n; i++) {
         if (left[i] > 0) {
            done = 0; 
            if (left[i] <= quanta) {
               time = time + left[i];
               wait[i] = time - process[i];
               left[i] = 0;
            }
            else {
               time = time + quanta;
               left[i] = left[i] - quanta;
            }
         }
      }
      if (done) break;
   }
   return 1;
}


int Dispaly_All(int n, int job[], int quanta, int cal_wait[], int cal_tat[] ) {
//   int cal_wait[n]; 
//   int cal_tat[n];
    int wait_time =  0;
    int turnAround = 0;
   
   waitingtime(job, n, cal_wait, quanta);
   turnarroundtime( n, job, cal_wait, cal_tat);
   
   for (int i=0; i<n; i++) {
      wait_time = wait_time + cal_wait[i];
      turnAround = turnAround + cal_tat[i];
      printf("   %d\t\t%d\t\t%d\t\t%d\n",i+1, job[i], cal_tat[i], cal_wait[i] );
   }
   float W_avg =  wait_time / (float)n;
   float Tat_avg = turnAround / (float)n;
   printf("Average wait time  = %f", W_avg);
   printf("\nAverage Turn Around time = %f\n", Tat_avg);
   return W_avg;
}


int main() {
   int job1[] = {53, 17, 68, 24};
   int n = sizeof job1 / sizeof job1[0];
   int quanta1 = 10;
   int cal_wait1[n]; 
   int cal_tat1[n];
   printf("Testcase 1\n");
   printf("process |  Burst Time |  Turn Around Time  | Wait Time \n");
   int avg1 = Dispaly_All(n, job1, quanta1, cal_wait1, cal_tat1);
   printf("---------------------------------------------------------------|\n\n");
   
   int job2[] = {10, 20, 18, 24};
   int n2 = sizeof job2 / sizeof job2[0];
   int quanta2 = 7;
   int cal_wait2[n]; 
   int cal_tat2[n];
   printf("Testcase 2\n");
   printf("process |  Burst Time |  Turn Around Time  | Wait Time \n");
   int avg2 = Dispaly_All(n2, job2, quanta2, cal_wait2, cal_tat2);
   printf("---------------------------------------------------------------|\n\n");
   
   int job3[] = {10, 20, 18, 24, 56, 33, 65};
   int n3 = sizeof job3 / sizeof job3[0];
   int quanta3 = 9;
   int cal_wait3[n]; 
   int cal_tat3[n];
   printf("Testcase 3\n");
   printf("process |  Burst Time |  Turn Around Time  | Wait Time \n");
   int avg3 = Dispaly_All(n3, job3, quanta3, cal_wait3, cal_tat3);
   printf("---------------------------------------------------------------|\n\n");
   
   int job4[] = {1, 1, 1};
   int n4 = sizeof job4 / sizeof job4[0];
   int quanta4 = 1;
   int cal_wait4[n]; 
   int cal_tat4[n];
   printf("Testcase 4\n");
   printf("process |  Burst Time |  Turn Around Time  | Wait Time \n");
   int avg4 = Dispaly_All(n4, job4, quanta4, cal_wait4, cal_tat4);
   printf("---------------------------------------------------------------|\n\n");
   
   int job5[] = {13, 19, 11, 7, 23};
   int n5 = sizeof job5 / sizeof job5[0];
   int quanta5 = 3;
   int cal_wait5[n]; 
   int cal_tat5[n];
   printf("Testcase 5\n");
   printf("process |  Burst Time |  Turn Around Time  | Wait Time \n");
   int avg5 = Dispaly_All(n5, job5, quanta5, cal_wait5, cal_tat5);
   float total_avg = (avg1+avg2+avg3+avg4+avg5)/5.0;
   printf("\n---------------------------------------------------------\n");
   printf("Average Waiting Time of all 5 testcases is : %f", total_avg);
   
   return 0;
}
